CC = @CC@
CXX = @CXX@
LDFLAGS = @LDFLAGS@
EXTLDFLAGS = @EXTLDFLAGS@
INSTALL = @INSTALL@ @SETOWNER@
INSTALL_DATA = @INSTALL@ -m 644 @SETOWNER@
CHOWN = @CHOWN@
STATIC_MODULES = @STATIC_MODULES@
LIBGB_PATH = @LIBGB_PATH@
LIBGB_NAME = @LIBGB_NAME@
LIBDB_PATH = @LIBDB_PATH@
LIBDB_NAME = @LIBDB_NAME@
LIBS = @LIBS@
OOPS_LIBDIR = @OOPS_LIBDIR@
OOPS_SBINDIR = @OOPS_SBINDIR@
OOPS_SYSCONFDIR = @OOPS_SYSCONFDIR@
OOPS_LOCALSTATEDIR = @OOPS_LOCALSTATEDIR@
OOPS_RPATH = @OOPS_RPATH@
OOPS_LIBS = @OOPS_LIBS@
LIBZ_NAME = @LIBZ_NAME@
EXTRASRC = @EXTRASRC@

SRCS = oops.c lib.c run.c run_client.c common.c http_utils.c ftp_utils.c \
	storage.c garbage_c.c  icp.c acl.c y.tab.c lex.yy.c \
	rotate_logs.c clean_disk.c ssl.c list.c statistics.c \
	worker.c dataq.c hash.c modules.c workq.c @EXTRASRC@
OBJS = $(SRCS:.c=.o) $(STATIC_MODULES)
EXTRAOBJS = $(EXTRASRC:.c=.o)

#CFLAGS = -Wall -ggdb -D_REENTRANT -D_POSIX_PTHREADS_SEMANTICS

CFLAGS = @CFLAGS@ -fPIE @DEFS@

VER=@VER@
OOPSPATH=@prefix@/oops

.c.o:
	${CC} -c ${CFLAGS} ${CDEFS} $<

all:	extras modules oops

extras: ${EXTRAOBJS}

modules::
	cd modules; $(MAKE)

oops:	${OBJS}
	${CXX} ${CFLAGS} ${OBJS} ${EXTLDFLAGS} ${LIBGB_PATH} ${LIBGB_NAME} ${OOPS_LIBS} ${LIBZ_NAME} ${OOPS_RPATH} -o oops

mkinstalldirs:
	../mkinstalldirs ${OOPSPATH} \
			 ${OOPSPATH}/logs \
			 ${OOPSPATH}/DB \
			 ${OOPSPATH}/storages \
			 ${OOPS_SYSCONFDIR}/tables \
			 ${OOPS_LIBDIR}

	if [ "X@OOPS_USER@" != "X" ]; then\
		${CHOWN} @OOPS_USER@ ${OOPSPATH}/logs;\
		${CHOWN} @OOPS_USER@ ${OOPSPATH}/DB;\
	fi

install: all mkinstalldirs
	$(INSTALL) -d ${OOPS_SBINDIR}
	$(INSTALL) oops ${OOPS_SBINDIR}
	if [ -f ${OOPS_SYSCONFDIR}/oops.cfg ]; then\
		$(INSTALL_DATA) oops.cfg ${OOPS_SYSCONFDIR}/oops.cfg.sample ;\
	   else\
		$(INSTALL_DATA) oops.cfg ${OOPS_SYSCONFDIR}/oops.cfg ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/err_template.html ]; then\
		$(INSTALL_DATA) err_template.html ${OOPS_SYSCONFDIR}/err_template.html.sample ;\
	   else\
		$(INSTALL_DATA) err_template.html ${OOPS_SYSCONFDIR}/err_template.html ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/auth_template.html ]; then\
		$(INSTALL_DATA) auth_template.html ${OOPS_SYSCONFDIR}/auth_template.html.sample ;\
	   else\
		$(INSTALL_DATA) auth_template.html ${OOPS_SYSCONFDIR}/auth_template.html;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/passwd ]; then\
		$(INSTALL_DATA) passwd ${OOPS_SYSCONFDIR}/passwd.sample ;\
	   else\
		$(INSTALL_DATA) passwd ${OOPS_SYSCONFDIR}/passwd ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/redir_rules ]; then\
		$(INSTALL_DATA) redir_rules ${OOPS_SYSCONFDIR}/redir_rules.sample ;\
	   else\
		$(INSTALL_DATA) redir_rules ${OOPS_SYSCONFDIR}/redir_rules ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/redir_template.html ]; then\
		$(INSTALL_DATA) redir_template.html ${OOPS_SYSCONFDIR}/redir_template.html.sample ;\
	   else\
		$(INSTALL_DATA) redir_template.html ${OOPS_SYSCONFDIR}/redir_template.html ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/accel_maps ]; then\
		$(INSTALL_DATA) accel_maps ${OOPS_SYSCONFDIR}/accel_maps.sample ;\
	   else\
		$(INSTALL_DATA) accel_maps ${OOPS_SYSCONFDIR}/accel_maps ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/select.sql ]; then\
		$(INSTALL_DATA) select.sql ${OOPS_SYSCONFDIR}/select.sql.sample ;\
	   else\
		$(INSTALL_DATA) select.sql ${OOPS_SYSCONFDIR}/select.sql ;\
	fi
	if [ -f ${OOPS_SYSCONFDIR}/acl_local_networks ]; then\
		$(INSTALL_DATA) acl_local_networks ${OOPS_SYSCONFDIR}/acl_local_networks.sample ;\
	   else\
		$(INSTALL_DATA) acl_local_networks ${OOPS_SYSCONFDIR}/acl_local_networks ;\
	fi
	if test "X@SOFLAGS@" != "X"; then \
	for m in modules/*so ; do \
		$(INSTALL) $$m ${OOPS_LIBDIR} ; \
	done; \
	$(INSTALL) modules/oopsctl ${OOPS_SBINDIR}; \
	fi
	for t in tables/*.tab ; do \
		$(INSTALL_DATA) $$t ${OOPS_SYSCONFDIR}/tables ; \
	done

oops.o:		oops.c oops.h version.h environment.h extern.h
lib.o:		lib.c oops.h environment.h extern.h
run.o:		run.c oops.h environment.h extern.h
run_client.o:	run_client.c oops.h modules.h environment.h extern.h
http_utils.o:	http_utils.c oops.h environment.h extern.h
ftp_utils.o:	ftp_utils.c oops.h environment.h extern.h
garbage_c.o:	garbage_c.c oops.h environment.h extern.h
acl.o:		acl.c oops.h environment.h extern.h
malloc.o:	malloc.c
storage.o:	storage.c oops.h environment.h extern.h
icp.o:		icp.c oops.h environment.h extern.h
rotate_logs.o:	rotate_logs.c oops.h environment.h extern.h
clean_disk.o:	clean_disk.c oops.h environment.h extern.h
ssl.o:		ssl.c oops.h environment.h extern.h
statistics.o:	statistics.c oops.h environment.h extern.h
list.o:		list.c llt.h oops.h environment.h extern.h
modules.o:	modules.c modules.h oops.h environment.h extern.h
common.o:       common.c oops.h environment.h extern.h

version.h:	version
		echo "#define VERSION \""`cat version`"\""> version.h

lex.yy.o: lex.yy.c y.tab.h oops.h
	${CC} ${CFLAGS} ${CDEFS} -c lex.yy.c

lex.yy.c: parser.l
	@LEX@ parser.l

y.tab.c: parser.y
	@YACC@ -d parser.y

y.tab.o: y.tab.c oops.h
	${CC} ${CFLAGS} ${CDEFS} -c y.tab.c

malloc.o: malloc.c
	${CC} ${CFLAGS} ${CDEFS} -DEBUG -c malloc.c

gnu_regex.o: gnu_regex.c
	${CC} ${CFLAGS} -DREGEX -c gnu_regex.c

clean:
	rm -f *o lex.yy.c  y.tab.[ch] version.h oops DEADJOE

distclean:
	rm -f Makefile *o lex.yy.c  y.tab.[ch] *~ *.ln config.cache version.h config.h oops

lint:
	lint -Ncheck=%all -Nlevel=4 ${CFLAGS} ${SRCS}
