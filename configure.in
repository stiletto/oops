AC_INIT(src/oops.c)
AC_CANONICAL_SYSTEM
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC

sed_script='s/,/.so /g'

AC_ARG_ENABLE(opt-modules,--enable-opt-modules      Additional modules(comma separated),\
OPT_MODS=`echo $enable_opt_modules | sed "$sed_script"`.so)

AC_ARG_ENABLE(large-files,--enable-large-files      Enable large files support,\
large_files="yes")

AC_ARG_WITH(DB,--with-DB                 BerkeleyDB home directory,\
LIBDB_PATH=$withval,LIBDB_PATH="")

AC_CHECK_HEADER(unistd.h)
AC_CHECK_HEADER(pthread.h)
AC_CHECK_HEADER(crypt.h, HAVE_CRYPT_H="-DHAVE_CRYPT_H", HAVE_CRYPT_H="")
AC_CHECK_HEADER(netinet/ip_fil.h, HAVE_IPF="1", HAVE_IPF="0")

pwd=`pwd`
LIBDB_NAME=-ldb
AC_MSG_CHECKING(for libdb.a)
if test "X$LIBDB_PATH" != "X" ; then
    LIBDB_PATH=$LIBDB_PATH
elif test -r "/usr/local/BerkeleyDB.3.0/lib/libdb.a"; then
    LIBDB_PATH="/usr/local/BerkeleyDB.3.0/lib"
elif test -r "/usr/local/BerkeleyDB/lib/libdb.a"; then
    LIBDB_PATH="/usr/local/BerkeleyDB/lib"
elif test -r "$pwd/libdb.a"; then
    LIBDB_PATH="$pwd"
elif test -r "/usr/local/lib/libdb.a"; then
    LIBDB_PATH="/usr/local/lib"
elif test -r "/usr/lib/libdb.a"; then
    LIBDB_PATH="/usr/lib"
elif test -r "/usr/local/lib/libdb2.a"; then
    LIBDB_PATH="/usr/local/lib"
    LIBDB_NAME=-ldb2
else
    echo "You must have bsd DB package installed."
    echo "Check it out at http://www.sleepycat.com"
    exit
fi
AC_MSG_RESULT($LIBDB_PATH)

if test "$LIBDB_PATH" = "/usr/local/BerkeleyDB.3.0/lib"; then
    CFLAGS="$CFLAGS -I/usr/local/BerkeleyDB.3.0/include -L/usr/local/BerkeleyDB.3.0/lib"
elif test "$LIBDB_PATH" = "/usr/local/BerkeleyDB/lib"; then
    CFLAGS="$CFLAGS -I/usr/local/BerkeleyDB/include -L/usr/local/BerkeleyDB/lib"
elif test "$LIBDB_PATH" = "$pwd"; then
    CFLAGS="$CFLAGS -I$pwd -L$pwd"
elif test "$LIBDB_PATH" = "/usr/local/lib"; then
    if test "$LIBDB_NAME" = "-ldb2"; then
	CFLAGS="$CFLAGS -I/usr/local/include/db2 -L/usr/local/lib"
    else
	CFLAGS="$CFLAGS -I/usr/local/include -L/usr/local/lib"
    fi
else
    CFLAGS="$CFLAGS -I$LIBDB_PATH/include -L$LIBDB_PATH/lib"
fi


AC_CHECK_LIB(pthread, pthread_create, pthread_in=pthread,pthread_in=no)
if test "$pthread_in" = no; then
AC_CHECK_LIB(pthreads, pthread_create, pthread_in=pthreads,pthread_in=no)
fi

AC_CHECK_LIB(dl, dlopen, dlopen_in=dl,dlopen_in=no)
if test "$dlopen_in" = no; then
AC_CHECK_LIB(c, dlopen, dlopen_in=c,dlopen=no)
fi

AC_CHECK_LIB(fl, yywrap, need_lfl="-lfl",need_lfl="")
AC_CHECK_LIB(crypt, crypt, LIBS="$LIBS -lcrypt")

##
## Check some typdefs
##
AC_MSG_CHECKING(for uint32_t)
AC_TRY_COMPILE([
#include	<stdio.h>
#include	<stdlib.h>
#ifdef	HAVE_UNISTD
#include	<stdlib.h>
#endif
#include	<signal.h>
#include	<pthread.h>
#include	<sys/types.h>
#include	<netinet/in.h>
],[
uint32_t	test;],[
HAVE_UINT32_T=-DHAVE_UINT32_T;AC_MSG_RESULT(yes)
],[AC_MSG_RESULT(no)])

CFLAGS="$CFLAGS $HAVE_UINT32_T"

if test "$HAVE_CRYPT_H" != "" ; then
	CFLAGS="$CFLAGS -DHAVE_CRYPT_H"
fi

AC_MSG_CHECKING(for __tm_gmtoff__)
AC_TRY_COMPILE([
#include	<stdio.h>
#include	<stdlib.h>
#ifdef	HAVE_UNISTD
#include	<stdlib.h>
#endif
#include	<time.h>
#include	<pthread.h>
#include	<sys/types.h>
#include	<netinet/in.h>
],[
struct	tm	tm;
tm.__tm_gmtoff__ = tm.__tm_gmtoff__*2;
],[
HAVE__GMTOFF__=-DHAVE__GMTOFF__;AC_MSG_RESULT(yes)
],[AC_MSG_RESULT(no)])

CFLAGS="$CFLAGS $HAVE__GMTOFF__"

LD=ld

##
##
##
if   test "$dlopen_in" = "dl"; then
	DLLIB="-ldl"
	MODULES="-DMODULES"
elif test "$dlopen_in" = "c"; then
	MODULES="-DMODULES"
else
	echo "Can't locate dlopen() - no modules."
	MODULES=""
fi
if test "$MODULES" = "-DMODULES"; then
	AC_MSG_CHECKING(flags to link shared objects.)
	SAVED_LDFLAGS=$LDFLAGS
cat>conftest.c << EOF
char test[[]]="test";
EOF
cat>confmain.c << EOF
#include <stdio.h>
#include <dlfcn.h>
main()
{
void *h=dlopen("./conftest.so",RTLD_NOW);
char *s;
    if (h) {
	s = dlsym(h, "test");
	if ( s ) printf("%s", s);
    }
}
EOF
	$CC confmain.c -o confmain $LIBS $DLLIB 2>>config.log
	$CC conftest.c -c $CFLAGS -o conftest.o 2>> config.log
	$LD conftest.o -L$LIBDB_PATH -G -o conftest.so 2>> config.log
	if test -f conftest.so ; then
	    res=`./confmain`
	fi
	if test "$res" = "test"; then
	    SOFLAGS="-G"
	fi
	if test "$SOFLAGS" = ""; then
	    $LD conftest.o -L$LIBDB_PATH -G -o conftest.so 2>> config.log
	    if test -f conftest.so ; then
		res=`./confmain`
	    fi
	    if test "$res" = "test"; then
		SOFLAGS="-L$LIBDB_PATH -G"
	    fi
	fi
	if test "$SOFLAGS" = ""; then
	    $LD conftest.o -Bshareable -o conftest.so 2>> config.log
	    if test -f conftest.so ; then
		res=`./confmain`
	    fi
	    if test "$res" = "test"; then
		SOFLAGS="-L$LIBDB_PATH -Bshareable"
	    fi
	fi
	rm -f conftest.so
	if test "$SOFLAGS" = ""; then
	    $LD conftest.o -fpic -shared -o conftest.so 2>> config.log
	    if test -f conftest.so ; then
		res=`./confmain`
	    fi
	    if test "$res" = "test"; then
		SOFLAGS="-fpic -shared"
	    fi
	fi
	rm -f conftest.so
	if test "$SOFLAGS" = ""; then
	    $LD conftest.o -shared -o conftest.so 2>> config.log
	    if test -f conftest.so ; then
		res=`./confmain`
		echo $res
	    fi
	    if test "$res" = "test"; then
		SOFLAGS="-shared"
	    fi
	fi
	rm -f conftest* confmain*
	AC_MSG_RESULT($SOFLAGS)
	if test "$SOFLAGS" != ""; then
		CFLAGS="$CFLAGS $MODULES"
		LIBS="$LIBS $DLLIB"
	fi
    AC_MSG_CHECKING(for -export-dynamic)
cat>confmain.c << EOF
#include <stdio.h>
main()
{
	printf("yes");
}
EOF
    $CC confmain.c -export-dynamic -o confmain 2>>config.log
    res=""
    if test -x confmain ; then
	res=`./confmain`
    fi
    if test "$res" = "yes"; then
	    LDFLAGS="$LDFLAGS -export-dynamic"
	    AC_MSG_RESULT(yes)
    else
	    AC_MSG_RESULT(no)
    fi
fi
rm -f confmain*

LDFLAGS="$LDFLAGS -L$LIBDB_PATH"

AC_CHECK_FUNC(strtok_r, need_strtok_r=no,need_strtok_r=yes)
if test "$need_strtok_r" = "yes"; then
    STRTOKSRC=strtok_r.c
    STRTOKOBJ=strtok_r.o
fi

AC_CHECK_FUNC(daemon, need_daemon=no,need_daemon=yes)
if test "$need_daemon" = "yes"; then
	CFLAGS="$CFLAGS -DNEED_DAEMON"
fi

AC_CHECK_FUNC(pread, have_pread=yes,have_pread=no)
if test "$have_pread" = "yes"; then
	CFLAGS="$CFLAGS -DHAVE_PREAD"
fi

AC_CHECK_FUNC(pwrite, have_pwrite=yes,have_pwrite=no)
if test "$have_pwrite" = "yes"; then
	CFLAGS="$CFLAGS -DHAVE_PWRITE"
fi

AC_CHECK_FUNC(poll, have_poll=yes,have_poll=no)
if test "$have_poll" = "yes"; then
	CFLAGS="$CFLAGS -DHAVE_POLL"
fi

AC_CHECK_FUNC(getrusage, HAVE_GETRUSAGE=1,HAVE_GETRUSAGE=0)

case "$host_os" in
irix*)    CFLAGS="-D_SGI_MP_SOURCE"
	  ;;
osf*)     CFLAGS="-g0 -O4 $CFLAGS -D_REENTRANT -DOSF"
	  LIBS="-oldstyle_liblookup -lpthread $LIBS -L$LIBDB_PATH $LIBDB_NAME"
	  ;;
freebsd*) CFLAGS="$CFLAGS -pthread -D_REENTRANT -DFREEBSD -D_THREAD_SAFE -DFD_SETSIZE=2048"
	  LIBS="-lc_r $LEXLIB $LIBS -L$LIBDB_PATH $LIBDB_NAME"
	  if test "$large_files" = "yes" ; then
		## FreeBSD need no any special flags for 64bit files
		CFLAGS="$CFLAGS -DWITH_LARGE_FILES"
	  fi
	  ;;
bsdi*)	CFLAGS="$CFLAGS -pthread -DBSDOS"
	  LIBS="$LEXLIB $LIBS -L$LIBDB_PATH $LIBDB_NAME"
	  ;;
gnu*|linux*)   CFLAGS="$CFLAGS -D_REENTRANT -DLINUX"
	  if test "$pthread_in" = "pthreads" ; then
		CFLAGS="$CFLAGS -D_MIT_POSIX_THREADS"
		LIBS="-lpthreads $LEXLIB -ldb $LIBS"
		echo Probably you have MIT-threads. If yes, swich to LinuxThreads.
	  else
		LIBS="-lpthread $LEXLIB $LIBS -L$LIBDB_PATH $LIBDB_NAME"
	  fi
	  if test "$large_files" = "yes" ; then
		## Linux ext2fs does'nt support large files yet.
		AC_MSG_RESULT(Warning: Linux ext2fs doesn't support large files.)
		CFLAGS="$CFLAGS -DWITH_LARGE_FILES -D_FILE_OFFSET_BITS=64 -D__USE_LARGEFILE64 -D__USE_FILE_OFFSET64"
	  fi
	  ;;
solaris*) CFLAGS="$CFLAGS -D_REENTRANT -DSOLARIS "
	  LIBS="-lm -ly -ll $LIBS -lsocket -lnsl -L$LIBDB_PATH $LIBDB_NAME"
	  case "$CC" in
		gcc*)	LIBS="-lthread -lpthread $LIBS"
			;;
		*)	CFLAGS="$CFLAGS -mt"
			;;
	  esac
	  if test "$large_files" = "yes" ; then
		CFLAGS="$CFLAGS -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DWITH_LARGE_FILES"
	  fi
	  ;;
aix4*) CFLAGS="$CFLAGS -DMODULES "
	  LIBS="$LIBS -ldl $LEXLIB -L$LIBDB_PATH $LIBDB_NAME"
          SOFLAGS=-G
          case "$CC" in
          gcc*)   CFLAGS="-D_THREAD_SAFE $CFLAGS"
                  LIBS="$LIBS -lpthreads -lc_r"
                  ;;
          cc_r* | xlc_r* | xlC_r* )
                  CC="$CC -qlanglvl=ansi -brtl -bexpall"
                  LD="makeC++SharedLib -p10 -bshared -lpthreads -lc_r"
                  ;;
	  esac
          if test "$large_files" = "yes" ; then
		CFLAGS="$CFLAGS -D_LARGE_FILES -D_LARGE_FILE_API -DWITH_LARGE_FILES"
	  fi
	  ;;
esac

AC_CHECK_FUNC(gethostbyname_r, have_gethostbyname_r=yes,have_gethostbyname_r=no)
if test "$have_gethostbyname_r" = "yes"; then
	HAVE_GETHOSTBYNAME_R=1
else
	HAVE_GETHOSTBYNAME_R=0
fi

AC_CHECK_FUNC(getdomainname, HAVE_GETDOMAINNAME=1,HAVE_GETDOMAINNAME=0)

AC_PATH_PROG(CHOWN, chown, /usr/sbin/chown,
       $PATH:/bin:/usr/bin:/usr/sbin)

echo $CC
echo $CFLAGS
echo $LIBS

printf %s "Under which uid Oops! will run? Enter username or press Enter: "
read OOPS_USER
VER=`cat src/version`
if test "X$OOPS_USER" != "X" ; then
	echo
	echo ">>WARNING! YOU MUST CHECK THAT ALL FILES USED BY OOPS"
	echo ">>ARE OWNED BY '$OOPS_USER'. OTHERWISE, YOU WILL HAVE PROBLEMS."
	echo
	SETOWNER="-o $OOPS_USER"
	OOPSUSER_DEF="userid	$OOPS_USER"
	AC_SUBST(OOPS_USER)
	AC_SUBST(SETOWNER)
else
	OOPSUSER_DEF=""
fi
AC_SUBST(OOPSUSER_DEF)

AC_SUBST(YACCLIB)
AC_SUBST(STRTOKSRC)
AC_SUBST(STRTOKOBJ)
AC_SUBST(SOFLAGS)
AC_SUBST(OPT_MODS)
AC_SUBST(HAVE_GETHOSTBYNAME_R)
AC_SUBST(HAVE_GETDOMAINNAME)
AC_SUBST(HAVE_IPF)
AC_SUBST(HAVE_GETRUSAGE)
AC_SUBST(CHOWN)
AC_SUBST(LD)
AC_SUBST(LDFLAGS)
AC_SUBST(VER)
AC_OUTPUT(src/Makefile src/modules/Makefile src/oops.cfg src/config.h)
